name: Build and Release Binaries

on:
  release:
    types: [created]

permissions:
  contents: write
  issues: write
  pull-requests: write
  statuses: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Build project
      run: cargo build --release

    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-binary
        path: target/release/

  release:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - name: Download binaries
      uses: actions/download-artifact@v3
      with:
        name: ${{ matrix.os }}-binary

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/release/
        asset_name: ${{ matrix.os }}-binary
        asset_content_type: application/octet-stream